from collections import defaultdict

string = "steststringstestfour"
string = "abcdthisisatextwithsampletextforasampleabcd"

def find(string, indices, depth=0):
	letters = defaultdict(list)
	for i in indices:
		if i != len(string):
			letters[string[i]].append(i+1)
	
	solutions = []
	for l in letters:
		if len(letters[l]) == 1:
			continue
		soln = find(string, letters[l], depth+1)
		if not soln and depth > 2:
			soln = [["", len(letters[l]), letters[l]]]
		solutions += [[l+w, c, s] for w,c,s in soln]

	return solutions

def search(string):
	minLens = [0] * len(string)
	solutions = find(string, range(len(string)))
	for word, _, indices in solutions:
		for idx in indices:
			for i in range(1, len(word)):
				minLens[idx-i] = max(i, minLens[idx-i])
	
	for soln in solutions:
		for idx in soln[2]:
			if len(soln[0]) <= minLens[idx-len(soln[0])]:
				soln[1] -= 1

	result = [(word, count) for word, count, _ in solutions if count > 1]
	for word, count in result:
		print("'{0}' {1} times".format(word, count))
			
print(string)
search(string)
